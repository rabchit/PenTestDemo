using Microsoft.AspNetCore.Mvc;
using Microsoft.Data.SqlClient;
using System.Transactions;
using VulnerableAPI.Models;

namespace VulnerableAPI.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class AspNetRoleClaimsController : ControllerBase
    {
        private readonly IConfiguration _configuration;

        public AspNetRoleClaimsController(IConfiguration configuration)
        {
            _configuration = configuration;
        }

        [HttpGet("{searchTerm}")]
        public IActionResult SearchPermission(string searchTerm)
        {
            var permissions = new List<AspNetRoleClaims>();

            // Vulnerable query -> directly concatenating the user input into the SQL query
            string query = $"SELECT Id, Name, Amount, Date FROM Transactions WHERE Name LIKE '%{searchTerm}%'";

            using (SqlConnection conn = new SqlConnection(_configuration.GetConnectionString("DefaultConnection")))
            {
                SqlCommand cmd = new SqlCommand(query, conn);
                conn.Open();

                using (SqlDataReader reader = cmd.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        permissions.Add(new AspNetRoleClaims
                        {
                            Id = reader.GetInt32(0),
                            Description = reader.GetString(1),
                            Group = reader.GetString(2),
                            RoleId = reader.GetGuid(3),
                            ClaimType = reader.GetString(4),
                            ClaimValue = reader.GetString(5)
                        });
                    }
                }
            }

            return Ok(permissions);
        }


        [HttpGet("notvulnerable/{searchTerm}")]
        public IActionResult SearchPermissionNotVulnerable(string searchTerm)
        {
            var permissions = new List<AspNetRoleClaims>();

            // Vulnerable query -> directly concatenating the user input into the SQL query
            string query = $"SELECT Id, Name, Amount, Date FROM Transactions WHERE Name LIKE @searchTerm";

            using (SqlConnection conn = new SqlConnection(_configuration.GetConnectionString("DefaultConnection")))
            {
                SqlCommand cmd = new SqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@searchTerm", "%" + searchTerm + "%");
                conn.Open();

                using (SqlDataReader reader = cmd.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        permissions.Add(new AspNetRoleClaims
                        {
                            Id = reader.GetInt32(0),
                            Description = reader.GetString(1),
                            Group = reader.GetString(2),
                            RoleId = reader.GetGuid(3),
                            ClaimType = reader.GetString(4),
                            ClaimValue = reader.GetString(5)
                        });
                    }
                }
            }

            return Ok(permissions);
        }
    }
}
